{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 module part4(SW, HEX0, HEX1, HEX2, HEX3);\
\
input [7:0]SW;\
output HEX0, HEX1, HEX2, HEX3;\
\
wire [3:0]a, [3:0]b, [10:0]c, [14:0]d, [7:0]p;\
\
and(p[0], a[0], b[0]);\
\
and(d[0],a[1],b[0]);\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 and(d[2],a[2],b[0]);\
and(d[4],a[3],b[0]);\
\
4bitadder(d[0],d[1],0,c[0],p[1]);\
4bitadder(d[2],d[3],c[0],c[1],s[0]);\
4bitadder(d[4],d[5],c[1],c[2],s[1]);\
4bitadder(0,d[6],c[2],c[3],s[2]);\
\
and(d[1],a[0],b[1]);\
and(d[3],a[1],b[1]);\
and(d[5],a[2],b[1]);\
and(d[6],a[3],b[1]);\
\
4bitadder(s[0],d[7],0,c[4],p[2]);\
4bitadder(s[1],d[8],c[4],c[5],s[3]);\
4bitadder(s[2],d[9],c[5],c[6],s[4]);\
4bitadder(c[3],d[10],c[6],c[7],s[5]);\
\
and(d[7],a[0],b[2]);\
and(d[8],a[1],b[2]);\
and(d[9],a[2],b[2]);\
and(d[10],a[3],b[2]);\
\
and(d[11],a[0],b[3]);\
and(d[12],a[1],b[3]);\
and(d[13],a[2],b[3]);\
and(d[14],a[3],b[3]);\
\
4bitadder(s[3],d[11],0,c[8],p[3]);\
4bitadder(s[4],d[12],c[8],c[9],p[4]);\
4bitadder(s[5],d[13],c[9],c[10],p[5]);\
4bitadder(c[7],d[14],c[10],p[7],p[6]);\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
\
endmodule\
\
\
\
\
module 4bitadder(a,b,cin,cout,s);\
intput a,b,cin;\
output cout, s;\
\
assign cout = (~b & a & cin) | (b & ~a & cin) | ( b & a & ~cin) | (b & a & cin)\
assign s = (~b & ~a & cin) | (~b & a & ~cin) | (b & ~a & ~cin) | (b & a & cin)\
\
endmodule }